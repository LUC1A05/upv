package org.pmobo.packlaborategia5;

public class Katalogoa
{
	// atributuak
	private ListaLiburuak lista;
	private static Katalogoa nireKatalogoa = null;
	
	// eraikitzailea
	
	private Katalogoa()
	{
		this.lista = new ListaLiburuak();
	}

 	// beste metodoak
 	
	public static Katalogoa getKatalogoa() 
	{
		if (nireKatalogoa == null)
			nireKatalogoa = new Katalogoa();
		return nireKatalogoa;
	}
	
 	public int liburuKopuru()
 	{
 		return this.lista.listarenTamaina();
 	}
 	 	
 	public Liburua bilatuLiburuaIdz(int pIdLiburua)
 	{
 	 	return this.lista.bilatuLiburuaIdz(pIdLiburua);
 	}
 	
 	public void mailegatuLiburua(int pIdLiburua, int pIdErabiltzailea)
	{
		if(this.lista.bilatuLiburuaIdz(pIdLiburua) != null)
		{
			if (ListaErabiltzaileak.getListaErabiltzaileak().norkDaukaMaileguan(this.lista.bilatuLiburuaIdz(pIdLiburua)) == null)
			{
				if (!ListaErabiltzaileak.getListaErabiltzaileak().bilatuErabiltzaileaIdz(pIdErabiltzailea).mailegatzekoMaximoaGainditua())
					ListaErabiltzaileak.getListaErabiltzaileak().bilatuErabiltzaileaIdz(pIdErabiltzailea).gehituLiburua(this.lista.bilatuLiburuaIdz(pIdLiburua));
				else
					System.out.println("Ezin da liburua mailegatu Erabiltzaileak mailegatzeko maximoa gainditzen baitu.");
			}
			else
				System.out.println("Ezin da liburua mailegatu jadanik erabiltzaile batek mailegatuta duelako.");
		}
		else
			System.out.println("Ezin da liburua mailegatu katalogoan ez dagoelako.");
	}

 	public void itzuliLiburua(int pIdLiburua)
	{
 		Erabiltzailea er = null;
		er = ListaErabiltzaileak.getListaErabiltzaileak().norkDaukaMaileguan(this.lista.bilatuLiburuaIdz(pIdLiburua));
		er.kenduLiburua(this.lista.bilatuLiburuaIdz(pIdLiburua));
	}
 	
 	public void katalogatuLiburua(Liburua pLiburua)
 	{		
 		
 	}

 	public void deskatalogatuLiburua(int pIdLiburua)
 	{
	
 	}

 	public void inprimatu()
 	{
 		
 	}

 	public void erreseteatu()
 	{
 		this.lista.clear();
 	}
 	
}	
